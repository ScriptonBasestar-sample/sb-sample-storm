buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://clojars.org/repo/"}
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.gradle.kotlin:plugins:1.2.2"

        classpath "com.github.jengelman.gradle.plugins:shadow:5.0.0"

        classpath "gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:0.8.8"

        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
    }
}

apply plugin: 'base'

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'kotlin-noarg'
    apply plugin: 'kotlin-jpa'

    apply plugin: 'eclipse'
    apply plugin: 'idea'

    group = project_group
    version = project_version

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    sourceCompatibility = java_version
    targetCompatibility = java_version
    compileKotlin {
        kotlinOptions.jvmTarget = java_version
        kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict']
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = java_version
        kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict']
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }
    eclipse {
        classpath {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://dl.bintray.com/palantir/releases' }
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
        mavenLocal()
    }

    dependencies {
        compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

        implementation "org.codehaus.groovy:groovy:$groovy_version"
        compile 'org.apache.ivy:ivy:2.4.0'
    }
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    dependencies {
        compile "ch.qos.logback:logback-classic:$logback_version"
        compile "ch.qos.logback:logback-core:$logback_version"
        compile "org.slf4j:slf4j-api:$slf4j_version"

        //test - docker
        testCompile "org.testcontainers:testcontainers:$testcontainers_version"
        testCompile "org.testcontainers:junit-jupiter:$testcontainers_version"
        testCompile "org.testcontainers:mysql:$testcontainers_version"
        testCompile 'org.testcontainers:docker-compose:0.9.9'

        testCompile 'io.projectreactor:reactor-test:3.2.10.RELEASE'
        testCompile 'org.assertj:assertj-core:3.13.0'

        testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
        testCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.4.1.Final'
    }
}
